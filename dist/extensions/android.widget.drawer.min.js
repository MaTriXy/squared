this.android=this.android||{},this.android.widget=this.android.widget||{},this.android.widget.drawer=function(){"use strict";var e='<?xml version="1.0" encoding="utf-8"?>\n<resources>\n\t<style name="{&appTheme}" parent="{~parentTheme}">\n\t\t<item name="android:windowDrawsSystemBarBackgrounds">true</item>\n\t\t<item name="android:statusBarColor">@android:color/transparent</item>\n\t\t<item name="android:windowTranslucentStatus">true</item>\n!items\n\t\t<item name="{&name}">{&value}</item>\n!items\n\t</style>\n</resources>',t=squared.base.lib.enumeration,a=squared.base.lib.constant,n=squared.lib.dom,i=squared.lib.util,r=android.base.Resource,o=android.lib.constant,d=android.lib.enumeration,s=android.lib.util;class l extends squared.base.Extension{constructor(e,t,n,i){super(e,t,n,i),this.documentRoot=!0,this.require(a.EXT_NAME.EXTERNAL,!0),this.require("android.widget.menu"),this.require("android.widget.coordinator")}init(e){return!(!this.included(e)||!e.children.length)&&(Array.from(e.children).forEach(e=>{"NAV"!==e.tagName||i.includes(e.dataset.use,a.EXT_NAME.EXTERNAL)||(e.dataset.use=(i.hasValue(e.dataset.use)?`${e.dataset.use}, `:"")+a.EXT_NAME.EXTERNAL)}),this.application.parseElements.add(e),!0)}processNode(e){const a=s.createAttribute(this.options.self);if(l.findNestedByName(e.element,"android.widget.menu"))i.defaultWhenNull(a,"android","fitsSystemWindows","true"),this.setStyleTheme(e.localSettings.targetAPI);else{const t=s.createAttribute(this.options.navigationView);i.defaultWhenNull(t,"android","layout_gravity",e.localizeString("left"));const a=e.item();a.android("layout_gravity",t.android.layout_gravity),a.android("layout_height","match_parent"),a.positioned=!0}return e.documentRoot=!0,e.setControlType(o.SUPPORT_ANDROID.DRAWER,d.CONTAINER_NODE.BLOCK),e.exclude({resource:t.NODE_RESOURCE.FONT_STYLE}),{output:this.application.controllerHandler.renderNodeStatic(o.SUPPORT_ANDROID.DRAWER,0,r.formatOptions(a,this.application.extensionManager.optionValueAsBoolean(o.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue")),"match_parent","match_parent",e,!0),complete:!0}}postParseDocument(e){const t=this.application,n=s.createAttribute(this.options.navigation),d=i.optionalAsString(l.findNestedByName(e.element,"android.widget.menu"),"dataset.layoutName"),u=i.optionalAsString(l.findNestedByName(e.element,a.EXT_NAME.EXTERNAL),"dataset.layoutName");if(""!==d&&i.defaultWhenNull(n,"app","menu",`@menu/${d}`),""!==u&&i.defaultWhenNull(n,"app","headerLayout",`@layout/${u}`),""!==d||""!==u){i.defaultWhenNull(n,"android","id",`${e.documentId}_navigation`),i.defaultWhenNull(n,"android","fitsSystemWindows","true"),i.defaultWhenNull(n,"android","layout_gravity",e.localizeString("left"));const a=t.controllerHandler.renderNodeStatic(o.SUPPORT_ANDROID.NAVIGATION_VIEW,1,r.formatOptions(n,this.application.extensionManager.optionValueAsBoolean(o.EXT_ANDROID.RESOURCE_STRINGS,"numberResourceValue")),"wrap_content","match_parent");t.addRenderQueue(""+e.id,a)}}postProcedure(e){const t=l.findNestedByName(e.element,"android.widget.coordinator");if(t){const e=n.getElementAsNode(t);e&&e.some(e=>e.positioned)&&e.inlineHeight&&e.android("layout_height","match_parent")}}setStyleTheme(t){if(this.application.resourceHandler.fileHandler){const a=Object.assign({},this.options.resource);i.defaultWhenNull(a,"appTheme",s.getAppTheme(this.application.resourceHandler.fileHandler.assets)||"AppTheme"),i.defaultWhenNull(a,"parentTheme","Theme.AppCompat.Light.NoActionBar");const n={appTheme:a.appTheme,parentTheme:a.parentTheme,items:[]};i.defaultWhenNull(a,"output","path",`res/values${t>=21?"":"-v21"}`),i.defaultWhenNull(a,"output","file","android.widget.drawer.xml"),this.application.resourceHandler.addStyleTheme(e,n,a)}}}const u=new l("android.widget.drawer",2);return squared&&squared.includeAsync(u),u}();
